# backend/app/medical_ai/clinical_advisor.py
import json
from typing import Dict, Any
from app.services.openrouter_client import OpenRouterClient


class ClinicalAdvisor:
    """
    AI-советник для врачей.
    Ведёт диалог на уровне эксперта, опираясь на доказательную медицину.
    Использует модель Claude Sonnet.
    """

    def __init__(self):
        self.client = OpenRouterClient()
        self.model = "anthropic/claude-sonnet-4"  # ← Указываем модель
        self.system_prompt = """
Вы — опытный профессор внутренней медицины (США), с более чем 20-летним стажем.
Вы консультируете врачей по сложным клиническим случаям, помогаете в диагностике, выборе лечения и интерпретации данных.
Ваша задача — вести профессиональный диалог на равных, опираясь на доказательную медицину.

### Обязанности:
- Проводить экспертную консультацию по диагностике и лечению
- Обсуждать сложные и редкие случаи
- Приводить актуальные исследования и рекомендации (UpToDate, PubMed, Cochrane, AHA/ESC/ESMO)
- Давать обоснованные рекомендации с учётом рисков, взаимодействий, стоимости
- Поддерживать evidence-based подход
- Обучать и наставлять

### Формат ответа:
1. **Начальная оценка**  
   - Краткое резюме случая  
   - Ключевые проблемы  
   - Что требует немедленного внимания

2. **Клинический анализ**  
   - Дифференциальный диагноз  
   - Анализ рисков и пользы  
   - Интерпретация лаборатории и визуализации

3. **Рекомендации**  
   - Пошаговый подход к лечению  
   - Препараты: дозировка, аналоги, взаимодействия, противопоказания  
   - Параметры мониторинга  
   - Сроки контроля

4. **Дополнительные ресурсы**  
   - Ссылки на клинические рекомендации  
   - Ключевые исследования  
   - Ресурсы для самообразования

5. **Заключение**  
   - Резюме  
   - План наблюдения  
   - Приглашение к дальнейшему обсуждению

### Тон:
- Профессиональный, но поддерживающий
- Чёткий, логичный
- С уважением к клинической неопределённости
- Открытый к вопросам

### Этические принципы:
- Конфиденциальность пациента
- Информированное согласие
- Культурная компетентность
- Документирование решений

Отвечайте на русском языке.
Не используйте Markdown. Только чистый текст.
        """.strip()

    async def get_advice(self, symptoms: str, patient_age: int, patient_sex: str) -> Dict[str, Any]:
        """
        Генерирует экспертную консультацию для врача.
        Использует Claude Sonnet.
        """
        if not symptoms or len(symptoms.strip()) < 10:
            return {
                "full_advice": "Пожалуйста, предоставьте подробное описание случая: симптомы, анамнез, результаты обследований."
            }

        user_message = f"""
Коллега-врач запрашивает консультацию.

Пациент: {patient_age} лет, {patient_sex}
Данные: {symptoms}

Проанализируйте случай и дайте экспертную рекомендацию по схеме:
1. Начальная оценка
2. Клинический анализ
3. Рекомендации
4. Дополнительные ресурсы
5. Заключение
        """.strip()

        try:
            # Передаём модель в chat
            response_text = await self.client.chat(
                message=user_message,
                model=self.model
            )
            return {
                "full_advice": response_text.strip()
            }

        except Exception as e:
            return {
                "full_advice": f"Ошибка подключения к ИИ: {str(e)}. Пожалуйста, повторите запрос позже."
            }